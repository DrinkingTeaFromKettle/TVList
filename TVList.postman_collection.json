{
	"info": {
		"_postman_id": "be00ee0c-03c0-4864-8497-7df0c13eaf9e",
		"name": "TVList",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34847013"
	},
	"item": [
		{
			"name": "Genre",
			"item": [
				{
					"name": "GetCollection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.collectionVariables.set(\"first_genre_id\", jsonData[0].id);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost/genres",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"path": [
								"genres"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost/genres/{{first_genre_id}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"path": [
								"genres",
								"{{first_genre_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Production",
			"item": [
				{
					"name": "Create",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"eval(pm.environment.get(\"get_token_func\"));",
									"pm.collectionVariables.set(\"random_production_name\", \"RND\"+String((new Date()).getTime()).replace(/\\compD/gi,'').substring(7));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.collectionVariables.set(\"random_production_id\", jsonData.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{random_production_name}}\",\n  \"description\": \"string\",\n  \"genres\": [\n    \"/genres/1\"\n  ],\n  \"episodes\": 2,\n  \"currentEpisodes\": 0,\n  \"trailerLink\": \"https://example.com/\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost/productions",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"path": [
								"productions"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetCollection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.collectionVariables.set(\"first_production_id\", jsonData[0].id);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost/productions",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"path": [
								"productions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost/productions/{{random_production_id}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"path": [
								"productions",
								"{{random_production_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"eval(pm.environment.get(\"get_token_func\"));",
									"pm.collectionVariables.set(\"random_production_name\", pm.collectionVariables.get(\"random_production_id\")+\"_path\" );"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/merge-patch+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"{{random_production_name}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost/productions/{{random_production_id}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"path": [
								"productions",
								"{{random_production_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"eval(pm.environment.get(\"get_token_func\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://localhost/productions/{{random_production_id}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"path": [
								"productions",
								"{{random_production_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Studio",
			"item": [
				{
					"name": "Create",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"eval(pm.environment.get(\"get_token_func\"));",
									"pm.collectionVariables.set(\"random_studio_name\", \"RND\"+String((new Date()).getTime()).replace(/\\compD/gi,'').substring(7));",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.collectionVariables.set(\"random_studio_id\", jsonData.id);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{random_studio_name}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost/studios",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"path": [
								"studios"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetCollection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost/studios",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"path": [
								"studios"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost/studios/{{random_studio_id}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"path": [
								"studios",
								"{{random_studio_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"eval(pm.environment.get(\"get_token_func\"));",
									"pm.collectionVariables.set(\"random_studio_name\", pm.collectionVariables.get(\"random_studio_name\")+\"_patch\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/merge-patch+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{random_studio_name}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost/studios/{{random_studio_id}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"path": [
								"studios",
								"{{random_studio_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"eval(pm.environment.get(\"get_token_func\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://localhost/studios/{{random_studio_id}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"path": [
								"studios",
								"{{random_studio_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Create",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"random_username\", \"RND\"+String((new Date()).getTime()).replace(/\\compD/gi,'').substring(7));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.collectionVariables.set(\"random_user_id\", jsonData.id);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{random_username}}\",\n  \"plainPassword\": \"{{default_secret}}\",\n  \"email\": \"{{random_username}}@example.com\",\n  \"roles\": [\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost/users",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Auth",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{random_username}}\",\n  \"password\": \"{{default_secret}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost/auth",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetCollection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"eval(pm.environment.get(\"get_token_func\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost/users",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"eval(pm.environment.get(\"get_token_func\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost/users/{{random_user_id}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"path": [
								"users",
								"{{random_user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"eval(pm.environment.get(\"get_token_func\"));",
									"pm.environment.set(\"random_username\", pm.environment.get(\"random_username\")+\"_patch\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/merge-patch+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{random_username}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost/users/{{random_user_id}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"path": [
								"users",
								"{{random_user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"eval(pm.environment.get(\"get_token_func\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://localhost/users/{{random_user_id}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"path": [
								"users",
								"{{random_user_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "access_token",
			"value": "wht"
		},
		{
			"key": "access_token",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "first_genre_id",
			"value": ""
		},
		{
			"key": "first_production_id",
			"value": ""
		},
		{
			"key": "first_studio_id",
			"value": ""
		},
		{
			"key": "random_username",
			"value": ""
		},
		{
			"key": "first_user_id",
			"value": ""
		},
		{
			"key": "random_user_id",
			"value": ""
		},
		{
			"key": "random_studio_name",
			"value": ""
		},
		{
			"key": "random_studio_id",
			"value": ""
		},
		{
			"key": "random_production_name",
			"value": ""
		},
		{
			"key": "random_production_id",
			"value": ""
		}
	]
}